using System.Linq;
using System.Text;
using SQLite;

#if NETFX_CORE
using Microsoft.VisualStudio.TestPlatform.UnitTestFramework;
using SetUp = Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestInitializeAttribute;
using TestFixture = Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestClassAttribute;
using Test = Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestMethodAttribute;
#else
using NUnit.Framework;
#endif

using System.IO;

namespace SQLite.Tests
{
	[TestFixture]
	public class OpenTest
	{
		const string UnicodeText = "\u01F427 \u221E";

		[Test]
		public void UnicodePaths()
		{
			var path = Path.GetTempFileName () + UnicodeText;

			using (var db = new SQLiteConnection (path, true)) {
				db.CreateTable<OrderLine> ();
			}

			Assert.That (new FileInfo (path).Length, Is.GreaterThan (0), path);
		}

		[Test]
		public void UnicodePathsAsync()
		{
			var path = Path.GetTempFileName () + UnicodeText;
			
			var db = new SQLiteAsyncConnection (path, true);
			db.CreateTableAsync<OrderLine> ().Wait ();

			Assert.That (new FileInfo (path).Length, Is.GreaterThan (0), path);
		}
	}
}
